[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "yt-dlp"
maintainers = [
    {name = "pukkandan", email = "pukkandan.ytdlp@gmail.com"},
    {name = "Grub4K", email = "contact@grub4k.xyz"},
    {name = "bashonly", email = "bashonly@protonmail.com"},
]
description = "A youtube-dl fork with additional features and patches"
readme = "README.md"
requires-python = ">=3.8"
keywords = [
    "youtube-dl",
    "video-downloader",
    "youtube-downloader",
    "sponsorblock",
    "youtube-dlc",
    "yt-dlp",
]
license = {file = "LICENSE"}
classifiers = [
    "Topic :: Multimedia :: Video",
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "License :: OSI Approved :: The Unlicense (Unlicense)",
    "Operating System :: OS Independent",
]
dynamic = ["version"]
dependencies = [
    "brotli; implementation_name=='cpython'",
    "brotlicffi; implementation_name!='cpython'",
    "certifi",
    "mutagen",
    "pycryptodomex",
    "requests>=2.31.0,<3",
    "urllib3>=1.26.17,<3",
    "websockets>=12.0",
]

[project.optional-dependencies]
secretstorage = [
    "cffi",
    "secretstorage",
]
build = [
    "build",
    "hatchling",
    "pip",
    "wheel",
]
dev = [
    "autopep8",
    "pre-commit",
    "pytest",
    "ruff==0.2.1",
]
pyinstaller = ["pyinstaller>=6.3"]
py2exe = ["py2exe>=0.12"]

[project.urls]
Documentation = "https://github.com/yt-dlp/yt-dlp#readme"
Repository = "https://github.com/yt-dlp/yt-dlp"
Tracker = "https://github.com/yt-dlp/yt-dlp/issues"
Funding = "https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators"

[project.scripts]
yt-dlp = "yt_dlp:main"

[project.entry-points.pyinstaller40]
hook-dirs = "yt_dlp.__pyinstaller:get_hook_dirs"

[tool.hatch.envs.default]
dependencies = ["yt-dlp[dev]"]

[tool.hatch.envs.default.scripts]
install = "pre-commit install"
lint = "ruff check {args:.}"
format = "autopep8 {args:.}"
tests = "python -m devscripts.run_tests {args}"
tests-core = "pytest -We --tb=short --ignore=test/test_download.py {args}"

[[tool.hatch.envs.default.overrides.env.TEST_ALL.matrix.value]]
python = [
    "3.8",
    "3.9",
    "3.10",
    "3.11",
    "3.12",
    "pypy3.8",
    "pypy3.9",
    "pypy3.10",
]

[tool.hatch.build.targets.sdist]
include = [
    "/yt_dlp",
    "/devscripts",
    "/test",
    "/.gitignore",  # included by default, needed for auto-excludes
    "/Changelog.md",
    "/LICENSE",  # included as license
    "/pyproject.toml",  # included by default
    "/README.md",  # included as readme
    "/setup.cfg",
    "/supportedsites.md",
]
exclude = ["/yt_dlp/__pyinstaller"]
artifacts = [
    "/yt_dlp/extractor/lazy_extractors.py",
    "/completions",
    "/AUTHORS",  # included by default
    "/README.txt",
    "/yt-dlp.1",
]

[tool.hatch.build.targets.wheel]
packages = ["yt_dlp"]
exclude = ["/yt_dlp/__pyinstaller"]
artifacts = ["/yt_dlp/extractor/lazy_extractors.py"]

[tool.hatch.build.targets.wheel.shared-data]
"completions/bash/yt-dlp" = "share/bash-completion/completions/yt-dlp"
"completions/zsh/_yt-dlp" = "share/zsh/site-functions/_yt-dlp"
"completions/fish/yt-dlp.fish" = "share/fish/vendor_completions.d/yt-dlp.fish"
"README.txt" = "share/doc/yt_dlp/README.txt"
"yt-dlp.1" = "share/man/man1/yt-dlp.1"

[tool.hatch.version]
path = "yt_dlp/version.py"
pattern = "_pkg_version = '(?P<version>[^']+)'"

[tool.ruff]
required-version = "0.2.1"
line-length = 120

[tool.ruff.lint]
ignore = [
    "E402", # module level import not at top of file
    "E501", # line too long
    "E731", # do not assign a lambda expression, use a def
    "E741", # ambiguous variable name
]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # import order
]

[tool.ruff.lint.per-file-ignores]
"devscripts/lazy_load_template.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = [
    "bundle",
    "devscripts",
    "test",
]
relative-imports-order = "closest-to-furthest"

[tool.autopep8]
max_line_length = 120
in-place = true
recursive = true
jobs = 0

[tool.pytest.ini_options]
addopts = "-ra -v --strict-markers"
markers = [
    "download",
]
